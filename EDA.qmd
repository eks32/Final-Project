---
title: "EDA"
author: "Eric Song"
format: html
editor: visual
---


## Introduction 

#redo
Let's take a look at our data. Let's start with looking at the data/variable types and checking for missing values.

```{r,warning=FALSE}
library(tidyverse)
library(tidymodels)
```

```{r}
beetus_data<-read_csv("diabetes_binary_health_indicators_BRFSS2015.csv")
beetus_data <- beetus_data |>
  mutate(
    Diabetes_binary = factor(Diabetes_binary, levels=c(0,1), labels = c("No Diabetes", "Pre/Diabetes")),
    HighBP = factor(HighBP, labels = c("No High BP", "High BP")),
    HighChol = factor(HighChol, labels = c("No High Cholesterol", "High Cholesterol")),
    CholCheck = factor(CholCheck, labels = c("No Cholesterol Check", "Cholesterol Check")),
    Smoker = factor(Smoker, labels = c("Non-Smoker", "Smoker")),
    Stroke = factor(Stroke, labels = c("No Stroke", "Stroke")),
    HeartDiseaseorAttack = factor(HeartDiseaseorAttack, labels = c("No", "Yes")),
    PhysActivity = factor(PhysActivity, labels = c("No Physical Activity", "Physical Activity")),
    Fruits = factor(Fruits, labels = c("No", "Yes")),
    Veggies = factor(Veggies, labels = c("No", "Yes")),
    HvyAlcoholConsump = factor(HvyAlcoholConsump, labels = c("No", "Yes")),
    AnyHealthcare = factor(AnyHealthcare, labels = c("No", "Yes")),
    NoDocbcCost = factor(NoDocbcCost, labels = c("No", "Yes")),
    DiffWalk = factor(DiffWalk, labels = c("No", "Yes")),
    Sex = factor(Sex, labels = c("Female", "Male")),
    GenHlth = factor(GenHlth, levels=1:5, labels = c("Excellent", "Very Good", "Good", "Fair", "Poor")),
    Education = factor(Education,levels=1:6, labels = c(
      "Never Attended School or only kindergarten",
      "Grades 1-8",
      "Grades 9-11",
      "Grade 12/GED",
      "Some College/Technical School",
      "College Graduate"
    )),
    Income = factor(Income,levels=1:8, labels = c(
      "Less than $10,000",
      "$10,000 to $15,000",
      "$15,000 to $20,000",
      "$20,000 to $25,000",
      "$25,000 to $35,000",
      "$35,000 to $50,000",
      "$50,000 to $75,000",
      "$75,000 or more"
    )),
    Age = factor(Age,levels=1:13, labels = c(
      "18-24", "25-29", "30-34", "35-39", "40-44",
      "45-49", "50-54", "55-59", "60-64", "65-69",
      "70-74", "75-79", "80 or older"
    ))
  )
```



```{r}
#Quick look at data types
str(beetus_data)
#Checking for Missing Data
beetus_data |>
  is.na()|>
  colSums()
```


## Numeric

```{r}
beetus_data |>
  select(where(is.numeric)) |>
  summary()
```


```{r}
ggplot(beetus_data, aes(x = BMI, fill = Diabetes_binary)) +
  geom_bar() 
ggplot(beetus_data, aes(x = Diabetes_binary,y = BMI, fill = Diabetes_binary)) +
  geom_violin() +
  labs(
    title = "Violin Plot of BMI by Diabetes Status",
    x = "Diabetes Status",
    y = "BMI",
    fill = "Diabetes Status"
  )
ggplot(beetus_data, aes(x = MentHlth, fill = Diabetes_binary)) +
  geom_bar(position="dodge") +
  labs(
    title = "Density Curve for Mental Health by Diabetes Status",
    x = "Mental Health (Score)",
    y = "Count",
    fill = "Diabetes Status"
  )
ggplot(beetus_data, aes(x = PhysHlth, fill = Diabetes_binary)) +
  geom_bar(position="dodge") +
  labs(
    title = "Density Curve for Physical Health by Diabetes Status",
    x = "Phys Health (Score)",
    y = "Count",
    fill = "Diabetes Status"
  )
```


```{r}
#Correlation Matrix
beetus_data |>
select(where(is.numeric)) |>
cor() |>
round(3)
```

## Categorical

```{r}
cont_tables <- lapply(names(beetus_data)[-which(names(beetus_data) == "Diabetes_binary")], function(var) {
  table(beetus_data[[var]], beetus_data$Diabetes_binary)
})

names(cont_tables) <- names(beetus_data)[-which(names(beetus_data) == "Diabetes_binary")]

cont_tables
```

Let's make some graphs as well.

#distributions for bmi/age etc... clean up titles

```{r}
#Showing plots of variables with 2 factor levels
twofact_plot<- beetus_data |>
  #Select variables with only 2 factor levels for clean plotting
  select(Diabetes_binary, where(~ is.factor(.) && nlevels(.) == 2)) |>
  pivot_longer(
    cols = -Diabetes_binary, 
    names_to = "Variable",   
    values_to = "Value"      
  )
#some scaling issues
ggplot(twofact_plot, aes(x = Value, fill = Diabetes_binary)) +
  geom_bar(position = "dodge") +
  facet_wrap(~ Variable, scales = "free_x") + 
  #tilted for readability
  theme(axis.text.x = element_text(angle = 10))

#Plots for more than 2 factor levels
multifact_data <- beetus_data |>
  select(Diabetes_binary, where(~ is.factor(.) && nlevels(.) > 2)) |>
  pivot_longer(
    cols = -Diabetes_binary, 
    names_to = "Variable",   
    values_to = "Value"      
  )
# Create individual plots for each variable
plots <- list() # Empty list to store plots
# Get unique variable names
unique_variables <- unique(multifact_data$Variable) 
for (var in unique_variables) {
  plot <- multifact_data |>
    filter(Variable == var) |> 
    ggplot(aes(x = Value, fill = Diabetes_binary)) +
    geom_bar(position = "dodge") +
    labs(
      title = paste("Distribution of", var, "by Diabetes Status"),
      x = var,
      y = "Count",
      fill = "Diabetes Status"
    ) +
    
    theme(axis.text.x = element_text(angle = 10))
  # Store the plot in the list
  plots[[var]] <- plot
}
plots[[unique_variables[1]]]
plots[[unique_variables[2]]]
plots[[unique_variables[3]]]
plots[[unique_variables[4]]]
```


[Click here for the Modeling Page](Modeling.html)
